텍스트 분석 머신러닝: 딥러닝이 성능이 좋아서 현재는 잘 안씀

1. 토큰 분리
2. 정렬
3. 카운팅
4. BOW 같은 거 같으니 뭉쳐! -> 행렬 만들기
5. 텍스트 데이터 뭉치 집어넣기
6. 동등 행렬(BOW, 텍스트데이터) 합치기
	-> 같은 알고리즘은 단어순서가 동일하다
	   (BOW가 단어순서 무관하다면서요? 에 대한 답)

야후: 디렉토리 기반 검색 시스템
구글: 다 긁어서 특징값 분류 -> BOW 사용

BOW: 텍스트가 주어졌을 때 인간의 개입없이 단어 분류

BOW: 단어 빈도를 이용해서 특징을 추출 및 분류
-> 단어 순서 무관
-> 편향이 크다: 그래서 불용어 처리를 한다
   자기 도메인의 데이터 특징을 좀더 강화하는 형태로 간다
-> 단어 빈도 추정에서 문제가 생긴다
   적게 등장한다고 중요치 않은 단어가 아님
   

불용어의 예: 조선시대 임금님 이름

불용어: 쓰는 도메인에서 절대 나오지 않거나, 잘못된 문서인 것을 알 수 있는 정보
한국어 불용어 처리는 따로 해야 한다.

빈도주의자: BOW, TFIDF

TF(빈도)
IDF(TF의 역수)
-> TfidfVectorizer
-> TF, IDF의 임계값을 찾아서 특징을 좀더 잘 분류해보자
-> 전문가는 이 알고리즘이 더 낫다.
-> 일반경우 TFIDF 그리 효율적이지 못하다: BOW가 낫다

n-그램: 이걸 쓰면 된다. 찍어준다
(여러단어로 만든 BOW)
-> 사용한 대표적인 서비스가 구글 트렌드 다.

텍스트 분석: 민감도 높음
텍스트 분석은 중요도 파악
문장이 주어졌을 떄 가장 중요한 단어를 찾으면 된다.

가장 많이 나오는 단어 양쪽 사이드 보기

n그램은 구글에서 개발
sklearn 쓰지않고 tensorflow 쓸 가능성이 높다

많이 출력/검색했기에 중요하다

n-그램 안되면 딥러닝해라

월요일날: 한글 텍스트 분석
데이터 구글링: github 네이버 영화 댓글
Flask, 진저2 사용해서 웹에서 돌아가는 버전 만들기

